{"version":3,"sources":["_reset.sass","_grid.sass","_scrollbar.sass","components/_footer.sass"],"names":[],"mappings":"AAAA;EACI;EACA;EACA;EACA;;;AC2DJ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;;;AACJ;EACI;EACA;EACA;EACA;EACA;;AACA;EAEI;EACA;EACA;EACA;EACA;;AAEA;EACI;EACA;EACA;;AAxDJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;AADJ;EACI;;;AAhBJ;EAQI;IACI;;;EACJ;IACI;;;AAXR;EAQI;IACI;;;EACJ;IACI;;;AAXR;EAQI;IACI;;;EACJ;IACI;;;AAXR;EAQI;IACI;;;EACJ;IACI;;;AAXR;EAQI;IACI;;;EACJ;IACI;;;AAaI;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AALJ;EACI;;;AACJ;EACI;;;AACJ;EACI;;;AA7BhB;EAwBY;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;AA7BhB;EAwBY;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;AA7BhB;EAwBY;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;AA7BhB;EAwBY;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;AA7BhB;EAwBY;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;EALJ;IACI;;;EACJ;IACI;;;EACJ;IACI;;;AAiDxB;EACI;;;AACJ;EACI;;;AClGJ;EACI;EACA;;;AACJ;EACI;;;AACJ;EACI;EACA;EACA;;;AACJ;EACI;EACA;;;AACJ;EACI;;;AAEJ;EACI;EACA;;;ACjBJ;EACI;EACA","file":"home.css","sourcesContent":["*\r\n    padding: 0\r\n    margin: 0\r\n    border: 0\r\n    box-sizing: border-box\r\n","$grid-breakpoints: ( xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px) !default\r\n$container-max-widths: ( sm: 100%, md: 720px, lg: 960px, xl: 1140px, xxl: 1320px) !default\r\n$small-container-max-widths: ( sm: 100%, md: 648px, lg: 912px, xl: 1050px, xxl: 1240px) !default\r\n$columns-12: 12 !default\r\n$rows-10: 10 !default\r\n$gap: 10px !default\r\n\r\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints)\r\n    $min: map-get($breakpoints, $name)\r\n    @return if($min != 0, $min, null) // retun xxx px if xs return null\r\n\r\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints)\r\n    @return  \"-#{$name}\"// return -sm\r\n\r\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints)\r\n    $min: breakpoint-min($name, $breakpoints)\r\n    @if $min\r\n        @media (min-width: $min)\r\n            @content\r\n    @else\r\n        @content\r\n\r\n@mixin make-responesive-container($container-max-widths,$sm-container-max-widths ,$breakpoints)\r\n    @each $breakpoint in map-keys($breakpoints)\r\n        @include media-breakpoint-up($breakpoint, $grid-breakpoints)\r\n            .cont\r\n                max-width: map-get($container-max-widths , $breakpoint)\r\n            .sm-cont\r\n                max-width: map-get($sm-container-max-widths , $breakpoint)\r\n\r\n@mixin make-rows($rows)\r\n    @for $i from 1 through $rows-10\r\n        >.g-row-#{$i}\r\n            --g-row: #{$i}\r\n\r\n@mixin make-grid-in-rows($columns: $columns-12, $rows: $rows-10 , $breakpoints: $grid-breakpoints)\r\n    @each $breakpoint in map-keys($breakpoints)\r\n        $infix: breakpoint-infix($breakpoint, $breakpoints)\r\n        @include media-breakpoint-up($breakpoint, $breakpoints)\r\n            @if $columns & $rows\r\n                @for $i from 1 through $columns-12\r\n                    .col#{$infix}-#{$i}, .col-#{$i}\r\n                        --col: #{$i}\r\n                    .start#{$infix}-#{$i},.start-#{$i}\r\n                        --start: #{$i}\r\n                    .row#{$infix}-#{$i},.row-#{$i}\r\n                        --in-rows: #{$i}\r\n\r\n@mixin in-base-breakpoint($breakpoints : $grid-breakpoints , $rows : $rows-10)\r\n    @each $breakpoint in map-keys($breakpoints)\r\n        $infix: breakpoint-infix($breakpoint, $breakpoints)\r\n        $min: breakpoint-min($breakpoint, $breakpoints)\r\n        @if $min != null\r\n            // only  write in xs and no xs breakpoint\r\n            $selector: null\r\n            $selector1: null\r\n            @for $i from 1 through $columns-12\r\n                $selector: $selector + \".col#{$infix}-#{$i},\"\r\n                $selector1: $selector + \".row#{$infix}-#{$i},\"\r\n               \r\n            // #{$selector1}\r\n                // --in-row: 1 \r\n         \r\n:root\r\n    --span: 1\r\n    --col: 12\r\n    --in-rows: auto\r\n    --gap-x: #{$gap}\r\n    --gap-y: #{$gap}\r\n    --g-row: 1\r\n    --columns: #{$columns-12}\r\n.sm-cont , .cont , .cont-fluid\r\n    width: 100%\r\n    padding-right: var(--gap-x)\r\n    padding-left: var(--gap-x)\r\n    margin-right: auto\r\n    margin-left: auto\r\n    [class*=g-row-]\r\n        // grid-row: var(--g-row)\r\n        display: grid\r\n        grid-row-gap: var(--gap-y)\r\n        grid-column-gap: var(--gap-x)\r\n        grid-template-rows: repeat(var(--g-row))\r\n        grid-template-columns: repeat(var(--columns),1fr)\r\n\r\n        [class*=col-]\r\n            grid-column: var(--start , auto) /span var(--col, auto)\r\n            border:1px black dotted\r\n            grid-row: var(--in-rows)\r\n    @include make-rows($rows-10)\r\n@include make-responesive-container($container-max-widths ,$small-container-max-widths,$grid-breakpoints)\r\n\r\n@include in-base-breakpoint()\r\n\r\n@include make-grid-in-rows()\r\n.w-100\r\n    width: 100%\r\n.d-none\r\n    display: none\r\n","::-webkit-scrollbar\r\n    width: 8px\r\n    height: 8px\r\n::-webkit-scrollbar-corner\r\n    background: transparent\r\n::-webkit-scrollbar-thumb\r\n    min-height: 0\r\n    background-color: #20c4ab\r\n    background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .4) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .4) 50%, rgba(255, 255, 255, .4) 75%, transparent 75%, transparent)\r\n::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb\r\n    border-radius: 999px\r\n    border: 0 solid transparent\r\n::-webkit-scrollbar-track\r\n    box-shadow: 1px 1px 5px rgba(100, 100, 100, 0.2) inset\r\n\r\n::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb\r\n    border-radius: 999px\r\n    border: 0 solid transparent\r\n",".footer-logo\r\n    width: 100%\r\n    height: 1000%\r\n"]}